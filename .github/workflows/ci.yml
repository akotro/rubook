name: ci

on:
  pull_request:
    paths:
      - '**/src/**'
      - 'Cargo.*'
      # - '.github/workflows/**'
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    strategy:
      matrix:
        build: [stable, beta, nightly]
        include:
          - build: nightly
            benches: true

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ matrix.build || 'stable' }}

      - name: Build debug
        run: cargo build

      - name: Test
        run: cargo test --all-features

      - name: Test all benches
        if: matrix.benches
        run: cargo test --benches --all-features

  deploy-linux:
    name: deploy-${{ matrix.target }}
    permissions:
      contents: write
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 2
      matrix:
        target: [aarch64-unknown-linux-gnu, x86_64-unknown-linux-gnu, x86_64-unknown-linux-musl]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install Cross
        run: cargo install cross

      # - name: Install OpenSSL
      #   run: sudo apt-get update && sudo apt-get install -y libssl-dev pkg-config

      - name: Build target
        run: cross build --bin rubook --release --locked --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/rubook
          cd target/${{ matrix.target }}/release
          tar czvf ../../../rubook-${{ matrix.target }}.tar.gz rubook ../../../LICENSE ../../../README.md ../../../.env.sample
          cd -

      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: 'rubook*'

  deploy-macos:
    name: deploy-${{ matrix.target }}
    permissions:
      contents: write
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    strategy:
      matrix:
        target: [x86_64-apple-darwin, aarch64-apple-darwin]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - run: rustup target add aarch64-apple-darwin
        if: matrix.target == 'aarch64-apple-darwin'

      - name: Build target
        run: cargo build --bin rubook --release --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          #strip target/${{ matrix.target }}/release/rubook
          cd target/${{ matrix.target }}/release
          zip -r ../../../rubook-${{ matrix.target }}.zip rubook ../../../LICENSE ../../../README.md ../../../.env.sample
          cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: 'rubook*'

  deploy-windows:
    name: deploy-${{ matrix.target }}
    permissions:
      contents: write
    needs: [test]
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x86_64-pc-windows-msvc]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup rust
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      # - name: Install OpenSSL
      #   run: choco install openssl

      - name: Build target
        run: cargo build --bin rubook --release --target ${{ matrix.target }}
        env:
          RUSTFLAGS: -C target-feature=+crt-static
          CARGO_TARGET_X86_64_PC_WINDOWS_MSVC_RUSTFLAGS: -C target-feature=+crt-static

      - name: Package
        shell: pwsh
        run: |
          #strip target/${{ matrix.target }}/release/testfile
          cd target/${{ matrix.target }}/release
          7z a ../../../rubook-${{ matrix.target }}.7z rubook.exe ../../../LICENSE ../../../README.md ../../../.env.sample
          cd -
      - name: Publish
        uses: softprops/action-gh-release@v1
        with:
          files: 'rubook*'
